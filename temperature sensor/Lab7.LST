C51 COMPILER V8.02   LAB7                                                                  12/11/2006 14:38:05 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE LAB7
OBJECT MODULE PLACED IN Lab7.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Lab7.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //Tin Fai Hui (Samuel)
   2          //CECS 347
   3          //Lab 7
   4          //12/6/2006
   5          
   6          
   7          #include <REG52a.H>                                                                     //use reg52.h for pre-defined SFR       
   8          #define XTAL 11059200                                                           //crystal oscillator frequency = 11.0592MHz
   9          
  10          
  11          //Initialize Variables-----------------------------------------------------------------------------------
  12          unsigned char timer = 0;                                                        //a timer variable that count up to 0.5 sec
  13          bit signal;                                                                                     //generate a singal if reach 0.5 sec
  14          sbit CS = P2^4;
  15          sbit RD = P2^5;                                                                         //declare a bit for Read
  16          sbit WR = P2^6;                                                                         //declare a bit for Write
  17          sbit INTR = P2^7;                                                                       //declare a bit for end conversation
  18          unsigned char temp;                                                                     //the received temperature from ADC0804
  19          
  20          // Function Prototype------------------------------------------------------------------------------------
  21          void initialize (void);                                                         //initialize the serial port    
  22          void set_baudrate (unsigned int baudrate);                      //setup the baud rate
  23          void initialize_t2();                                                           //initialize timer2 for interrupt for every 0.5 sec
  24          void delay(unsigned int value);                                         //delay function
  25          void display(int value);
  26          
  27          // Main Program------------------------------------------------------------------------------------------
  28          void main()
  29          {
  30   1              initialize();                                                                   //initialize serial port
  31   1              initialize_t2();                                                                //initialize timer 2    
  32   1              INTR = 1;                                                                               //make INTR and input
  33   1              RD = 1;                                                                                 //set RD high
  34   1              WR = 1;                                                                                 //set WR high
  35   1              P0 = 0xFF;                                                                              //P0 as input                                   
  36   1              CS = 0;                                                                                 //chip select
  37   1                                      
  38   1              while (1)
  39   1              {
  40   2                              WR = 0;                                                                 //send WR pulse
  41   2                              delay(500);                                                             //delay
  42   2                              WR = 1;
  43   2                              while (INTR == 1);                                              //wait for end of conversation
  44   2                              INTR = 1;
  45   2                              RD = 0;                                                                 //send RD pulse                         
  46   2                              temp = P0;                                                              //read data from ADC0804                                
  47   2                              display(temp);                                                  //display the temperature into HyperTerminal
  48   2                              RD = 1;
  49   2              }          
  50   1      }
  51          
  52          
  53          // Function Definitions----------------------------------------------------------------------------------
  54          void SerialIO_int(void) interrupt 4 using 2
  55          {
C51 COMPILER V8.02   LAB7                                                                  12/11/2006 14:38:05 PAGE 2   

  56   1         //serial port interrupt service routine
  57   1      }
  58          
  59          
  60          void t2_ISR (void) interrupt 5 using 3                                          //interrupt service routine for timer 2
  61          {
  62   1              TF2 = 0;                                                                                //clear interrupt flag                          
  63   1              timer++;                                                                                //increment the timer
  64   1              timer %= 10;                                                                    //make sure the timer will not over count
  65   1              if(timer == 0)                                                                  //finish counting from 0-9
  66   1                      signal = 1;                                                                     //0.5 sec is reached  
  67   1      }
  68          
  69          
  70          void initialize (void)
  71          {
  72   1              set_baudrate (9600);                                                    //set baurd rate to 9600 
  73   1      
  74   1              EA = 0;                                                                         //disable all interrupts 
  75   1              SM0 = 0; 
  76   1              SM1 = 1;                                                                                //serial mode 1, 1 stop bit, 1 start bit                                                                
  77   1              SM2 = 0;
  78   1              REN = 1;                                                                                //receive enable: allow 8051 transfer & receive data 
  79   1              TI = 0;                                                                                 //clear transmit interrupt flag
  80   1              RI = 0;                                                                                 //clear receive interrupt flag
  81   1              ES = 1;                                                                                 //enable serial interrupts       
  82   1              EA = 1;                                                                         //enable interrupts 
  83   1      }
  84          
  85          
  86          void set_baudrate (unsigned int baudrate)
  87          {
  88   1              EA = 0;                                                                         //disable all interrupts 
  89   1              TI = 0;                                                                                 //clear transmit interrupt flag
  90   1              TR1 = 0;                                                                                //stop timer 1 
  91   1              ET1 = 0;                                                                                //disable timer 1 interrupt                        
  92   1              PCON |= 0x80;                                                                   //make baudrate x2 to get the full period 
  93   1              TMOD &= ~0xF0;                                                                  //clear timer 1 mode bits
  94   1              TMOD |= 0x20;                                                                   //timer 1, mode2 
  95   1              TH1 = (unsigned char) (256 - (XTAL / (16L * 12L * baudrate)));          
  96   1                                                                                                              //formula for getting TH1 value                                                                 
  97   1              TR1 = 1;                                                                                //timer 1 runs
  98   1              EA = 1;                                                                 //enable all interrupts 
  99   1      }
 100          
 101          
 102          void initialize_t2()
 103          {
 104   1              T2CON = 0x00;                                                                   //set timer2 to auto-reload mode
 105   1          ET2 = 1;                                                                            //enable timer 2 interrupts                
 106   1              RCAP2L = 0x00;                                                                  //set the auto-reload value to make the interrupt 
 107   1              RCAP2H = 0x4C;                                                                  //occur in every 0.5s
 108   1              TR2 = 1;                                                                                //timer 2 runs 
 109   1              EA = 1;                                                                                 //enable interrupt        
 110   1      }
 111          
 112          
 113          void delay(unsigned int value)
 114          {
 115   1              unsigned int i;
 116   1              for(i = 0; i < value; i++);
 117   1      }
C51 COMPILER V8.02   LAB7                                                                  12/11/2006 14:38:05 PAGE 3   

 118          
 119          
 120          void display(int value)
 121          {
 122   1              int d1,d2,d3,d4;
 123   1              int x = value;
 124   1              x = (int)(((double)value * (double) 5 / (double)256) * (double)1000);
 125   1                                                                                                               //convert the value into F degree      
 126   1              P1      = value;
 127   1      
 128   1              d4 = x /1000;                                                                   //display the value
 129   1              x -= d4 * 1000;
 130   1      
 131   1              d3 = (x) /100;
 132   1              x -= d3 * 100;
 133   1      
 134   1              d2 = (x) /10;
 135   1              x -= d2 * 10;
 136   1      
 137   1              d1 =  x;
 138   1              
 139   1              SBUF = (unsigned char)(48 + d4);
 140   1              delay(100);
 141   1              
 142   1              SBUF =  (unsigned char)(48 + d3);       
 143   1              delay(100);
 144   1              
 145   1              SBUF =  (unsigned char)(48 + d2);
 146   1              delay(100);
 147   1      
 148   1              SBUF = '.';
 149   1              delay(100);
 150   1      
 151   1              SBUF =  (unsigned char)(48 + d1);
 152   1              delay(100);     
 153   1              
 154   1              SBUF = 'F';
 155   1              delay(100);     
 156   1      
 157   1              SBUF = '\r';
 158   1              delay(100); 
 159   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    392    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
